{"kind":"article","schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/bigint.BigInt\/documentation\/BigInt"]]},"identifier":{"url":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBFraction","interfaceLanguage":"swift"},"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Fractions are represented as "},{"type":"reference","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/BFraction","isActive":true},{"type":"text","text":" values consisting of a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/BInt"},{"text":" numerator value and a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/BInt"},{"text":" denominator value. The representation is normalized:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"The numerator and denominator have no common factors except 1"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The denominator is always positive"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Zero is represented as 0\/1","type":"text"}]}]}],"type":"unorderedList"},{"type":"heading","anchor":"Creating-BFractions","level":3,"text":"Creating BFraction’s"},{"syntax":"swift","code":["\/\/ From its numerator and denominator","let f = BFraction(17, 4)","","\/\/ From its decimal value","let f = BFraction(4.25)","","\/\/ From its string representation","let f = BFraction(\"4.25\")!","\/\/ or equivalently","let f = BFraction(\"425E-2\")!","","\/\/ From a continued fraction","let f = BFraction([3, 4, 12, 4])  \/\/ f = 649 \/ 200"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Defining a fraction by specifying its decimal value might lead to surprises,"},{"text":" ","type":"text"},{"type":"text","text":"because not all decimal values can be represented exactly as a floating point number."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"One might think that ","type":"text"},{"type":"codeVoice","code":"BFraction(0.1)"},{"type":"text","text":" would equal 1\/10,"},{"text":" ","type":"text"},{"text":"but in fact it equals 3602879701896397 \/ 36028797018963968 = 0.1000000000000000055511151231257827021181583404541015625","type":"text"}]},{"inlineContent":[{"text":"On the other hand, ","type":"text"},{"type":"codeVoice","code":"BFraction(\"0.1\")!"},{"type":"text","text":" equals 1\/10."}],"type":"paragraph"},{"type":"heading","level":3,"anchor":"Converting-BFractions","text":"Converting BFraction’s"},{"inlineContent":[{"type":"text","text":"BFraction values can be converted to String values, to decimal String values, to Double values and to Continued Fraction values."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let x = BFraction(1000, 7)","","\/\/ To String","let s1 = x.asString() \/\/ s1 = \"1000 \/ 7\"","","\/\/ To decimal String","let s1 = x.asDecimalString(precision: 8, exponential: false) \/\/ s1 = \"142.85714\"","let s2 = x.asDecimalString(precision: 8, exponential: true) \/\/ s2 = \"1.4285714E+2\"","","\/\/ To Double","let d = x.asDouble() \/\/ d = 142.8571428571429","","\/\/ To Continued Fraction","let f = x.asContinuedFraction() \/\/ f = [BInt(142), BInt(1), BInt(6)]"]},{"text":"Operations","type":"heading","anchor":"Operations","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The operations available to "},{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/BFraction","isActive":true,"type":"reference"},{"text":" are:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Arithmetic:","type":"text"}],"type":"strong"},{"type":"text","text":" addition, subtraction, multiplication, division, exponentiation, modulus"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Comparison:","type":"text"}]},{"type":"text","text":" The six standard operations ==  !=  <  <=  >  >="}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Rounding:"}],"type":"strong"},{"type":"text","text":" Rounding fractions to integers"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Miscellaneous:","type":"text"}]},{"text":" Bernoulli Numbers, Harmonic Numbers","type":"text"}]}]}],"type":"unorderedList"},{"type":"heading","level":3,"anchor":"Bernoulli-Numbers","text":"Bernoulli Numbers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The static function"}]},{"syntax":"swift","code":["let Bn = BFraction.bernoulli(n)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"computes the n’th (n >= 0) Bernoulli number, which is a rational number."}],"type":"paragraph"},{"inlineContent":[{"text":"For example","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["print(BFraction.bernoulli(60))","print(BFraction.bernoulli(60).asDecimalString(precision: 20, exponential: true))"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"would print"}]},{"syntax":"swift","type":"codeListing","code":["-1215233140483755572040304994079820246041491 \/ 56786730","-2.1399949257225333665E+34"]},{"inlineContent":[{"type":"text","text":"The static function"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let x = BFraction.bernoulliSequence(n)"]},{"type":"paragraph","inlineContent":[{"text":"computes the n even numbered Bernoulli numbers B(0), B(2) … B(2 * n - 2).","type":"text"}]},{"type":"heading","level":3,"text":"Harmonic Numbers","anchor":"Harmonic-Numbers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The static function"}]},{"code":["let Hn = BFraction.harmonic(n)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"computes the n’th harmonic number, that is, 1 + 1\/2 + … + 1\/n"}]},{"type":"paragraph","inlineContent":[{"text":"The static function","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let x = BFraction.harmonicSequence(n)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"returns an array containing the first n harmonic numbers."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/bigint\/aboutbfraction"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBInt","doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutCRT","doc:\/\/bigint.BigInt\/documentation\/BigInt\/Performance","doc:\/\/bigint.BigInt\/documentation\/BigInt\/References","doc:\/\/bigint.BigInt\/documentation\/BigInt\/Algorithms","doc:\/\/bigint.BigInt\/documentation\/BigInt\/Protocols"],"anchor":"Articles","title":"Articles"}],"metadata":{"title":"About BFraction","roleHeading":"Article","role":"article","modules":[{"name":"BigInt"}]},"abstract":[{"type":"text","text":"Signed fractions with numerator and denominator of unbounded size"}],"references":{"doc://bigint.BigInt/documentation/BigInt/Performance":{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/Performance","kind":"article","title":"Performance","role":"article","type":"topic","url":"\/documentation\/bigint\/performance","abstract":[{"type":"text","text":"Execution times for certain BigInt operations"}]},"doc://bigint.BigInt/documentation/BigInt":{"title":"BigInt","type":"topic","url":"\/documentation\/bigint","role":"collection","kind":"symbol","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt","abstract":[{"type":"text","text":"Signed integers and fractions of unbounded size"}]},"doc://bigint.BigInt/documentation/BigInt/AboutCRT":{"url":"\/documentation\/bigint\/aboutcrt","title":"About CRT","abstract":[{"type":"text","text":"Chinese Remainder Theorem"}],"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutCRT","type":"topic","kind":"article","role":"article"},"doc://bigint.BigInt/documentation/BigInt/BInt":{"abstract":[{"text":"The BInt structure","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BInt"}],"kind":"symbol","url":"\/documentation\/bigint\/bint","type":"topic","title":"BInt","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/BInt","navigatorTitle":[{"kind":"identifier","text":"BInt"}]},"doc://bigint.BigInt/documentation/BigInt/BFraction":{"kind":"symbol","role":"symbol","url":"\/documentation\/bigint\/bfraction","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BFraction","kind":"identifier"}],"title":"BFraction","abstract":[{"type":"text","text":"The BFraction structure"}],"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/BFraction","type":"topic","navigatorTitle":[{"text":"BFraction","kind":"identifier"}]},"doc://bigint.BigInt/documentation/BigInt/AboutBInt":{"kind":"article","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBInt","title":"About BInt","type":"topic","abstract":[{"type":"text","text":"Signed integers of unbounded size"}],"url":"\/documentation\/bigint\/aboutbint","role":"article"},"doc://bigint.BigInt/documentation/BigInt/References":{"kind":"article","abstract":[{"type":"text","text":"Algorithms from the following books and papers have been used in the implementation"}],"role":"article","url":"\/documentation\/bigint\/references","type":"topic","title":"References","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/References"},"doc://bigint.BigInt/documentation/BigInt/Protocols":{"kind":"article","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/Protocols","title":"Protocols and Additions","type":"topic","abstract":[{"type":"text","text":"BigInt supports the standard integer data type’s SignedInteger, BinaryInteger, Codable, and Numeric protocols."}],"url":"\/documentation\/bigint\/protocols","role":"article"},"doc://bigint.BigInt/documentation/BigInt/Algorithms":{"kind":"article","abstract":[{"type":"text","text":"Some of the algorithms used in BigInt are described below"}],"role":"article","url":"\/documentation\/bigint\/algorithms","type":"topic","title":"Algorithms","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/Algorithms"}}}