{"seeAlsoSections":[{"anchor":"Articles","generated":true,"title":"Articles","identifiers":["doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBFraction","doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutCRT","doc:\/\/bigint.BigInt\/documentation\/BigInt\/Performance","doc:\/\/bigint.BigInt\/documentation\/BigInt\/References","doc:\/\/bigint.BigInt\/documentation\/BigInt\/Algorithms","doc:\/\/bigint.BigInt\/documentation\/BigInt\/Protocols"]}],"abstract":[{"text":"Signed integers of unbounded size","type":"text"}],"primaryContentSections":[{"content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"inlineContent":[{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/BInt","type":"reference","isActive":true},{"text":" values are represented with magnitude and sign:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"The magnitude is an array of unsigned 64 bit integers (a.k.a. Limbs)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The sign is a boolean value, "},{"type":"codeVoice","code":"true"},{"text":" means value < 0, ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":" means value >= 0"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The representation is little-endian, least significant Limb has index 0","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The representation is minimal, there is no leading zero Limbs. The exception is that the value 0 is represented as a single 64 bit zero Limb and sign "},{"type":"codeVoice","code":"false"}]}]}]},{"level":3,"anchor":"Creating-BInts","text":"Creating BInt’s","type":"heading"},{"code":["\/\/ From an integer","let a = BInt(27)","","\/\/ From a decimal value","let x = BInt(1.12345e30) \/\/ x = 1123450000000000064996914495488","","\/\/ From string literals","let b = BInt(\"123456789012345678901234567890\")!","let c = BInt(\"1234567890abcdef1234567890abcdef\", radix: 16)!","","\/\/ From magnitude and sign","let m: Limbs = [1, 2, 3]","let d = BInt(m) \/\/ d = 1020847100762815390427017310442723737601","let e = BInt(m, true) \/\/ e = -1020847100762815390427017310442723737601","","\/\/ From a big-endian 2's complement byte array","let f = BInt(signed: [255, 255, 127]) \/\/ f = -129","","\/\/ From a big-endian magnitude byte array","let g = BInt(magnitude: [255, 255, 127]) \/\/ g = 16777087","","\/\/ Random value with specified bitwidth","let h = BInt(bitWidth: 43) \/\/ For example h = 3965245974702 (=0b111001101100111011000100111110100010101110)","","\/\/ Random value less than a given value","let i = h.randomLessThan() \/\/ For example i = 583464003284"],"type":"codeListing","syntax":"swift"},{"level":3,"text":"Converting BInt’s","anchor":"Converting-BInts","type":"heading"},{"syntax":"swift","code":["let x = BInt(16777087)","","\/\/ To double","let d = x.asDouble() \/\/ d = 16777087.0","","\/\/ To strings","let s1 = x.asString() \/\/ s1 = \"16777087\"","let s2 = x.asString(radix: 16) \/\/ s2 = \"ffff7f\"","","\/\/ To big-endian magnitude byte array","let b1 = x.asMagnitudeBytes() \/\/ b1 = [255, 255, 127]","","\/\/ To big-endian 2's complement byte array","let b2 = x.asSignedBytes() \/\/ b2 = [0, 255, 255, 127]"],"type":"codeListing"},{"type":"heading","anchor":"Operations","level":3,"text":"Operations"},{"inlineContent":[{"type":"text","text":"The operations available to "},{"type":"reference","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/BInt","isActive":true},{"type":"text","text":" are:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Arithmetic:"}],"type":"strong"},{"type":"text","text":" addition, subtraction, multiplication, division, exponentiation, remainder and modulus, gcd and lcm"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Comparison:"}]},{"type":"text","text":" the six standard operations ==  !=  <  <=  >  >="}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Shift Operations:","type":"text"}]},{"type":"text","text":" logical left- and right shifts"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Bit Operations:"}]},{"type":"text","text":" logical and, or, xor, not, bit manipulation"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Root Extraction:"}]},{"text":" sqrt, sqrtMod, sqrtRemainder, isPerfectSquare, root, rootRemainder, isPerfectRoot","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Prime Number:"}]},{"type":"text","text":" probablePrime, nextPrime, isProbablyPrime, primorial"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Miscellaneous:"}]},{"text":" randomLessThan, binomial, factorial, fibonacci, jacobiSymbol, kroneckerSymbol, lucas","type":"text"}],"type":"paragraph"}]}]}],"kind":"content"}],"metadata":{"title":"About BInt","roleHeading":"Article","modules":[{"name":"BigInt"}],"role":"article"},"variants":[{"paths":["\/documentation\/bigint\/aboutbint"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/bigint.BigInt\/documentation\/BigInt"]]},"kind":"article","identifier":{"url":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBInt","interfaceLanguage":"swift"},"sections":[],"references":{"doc://bigint.BigInt/documentation/BigInt/Algorithms":{"kind":"article","abstract":[{"type":"text","text":"Some of the algorithms used in BigInt are described below"}],"role":"article","url":"\/documentation\/bigint\/algorithms","type":"topic","title":"Algorithms","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/Algorithms"},"doc://bigint.BigInt/documentation/BigInt/AboutBFraction":{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutBFraction","abstract":[{"type":"text","text":"Signed fractions with numerator and denominator of unbounded size"}],"kind":"article","title":"About BFraction","type":"topic","url":"\/documentation\/bigint\/aboutbfraction","role":"article"},"doc://bigint.BigInt/documentation/BigInt":{"title":"BigInt","type":"topic","url":"\/documentation\/bigint","role":"collection","kind":"symbol","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt","abstract":[{"type":"text","text":"Signed integers and fractions of unbounded size"}]},"doc://bigint.BigInt/documentation/BigInt/AboutCRT":{"url":"\/documentation\/bigint\/aboutcrt","title":"About CRT","abstract":[{"type":"text","text":"Chinese Remainder Theorem"}],"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/AboutCRT","type":"topic","kind":"article","role":"article"},"doc://bigint.BigInt/documentation/BigInt/Protocols":{"kind":"article","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/Protocols","title":"Protocols and Additions","type":"topic","abstract":[{"type":"text","text":"BigInt supports the standard integer data type’s SignedInteger, BinaryInteger, Codable, and Numeric protocols."}],"url":"\/documentation\/bigint\/protocols","role":"article"},"doc://bigint.BigInt/documentation/BigInt/Performance":{"identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/Performance","kind":"article","title":"Performance","role":"article","type":"topic","url":"\/documentation\/bigint\/performance","abstract":[{"type":"text","text":"Execution times for certain BigInt operations"}]},"doc://bigint.BigInt/documentation/BigInt/BInt":{"abstract":[{"text":"The BInt structure","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BInt"}],"kind":"symbol","url":"\/documentation\/bigint\/bint","type":"topic","title":"BInt","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/BInt","navigatorTitle":[{"kind":"identifier","text":"BInt"}]},"doc://bigint.BigInt/documentation/BigInt/References":{"kind":"article","abstract":[{"type":"text","text":"Algorithms from the following books and papers have been used in the implementation"}],"role":"article","url":"\/documentation\/bigint\/references","type":"topic","title":"References","identifier":"doc:\/\/bigint.BigInt\/documentation\/BigInt\/References"}}}